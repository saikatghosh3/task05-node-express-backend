openapi: 3.0.0
info:
  title: Random User Generator
  version: "1.0.0"
servers:
  - url: http://localhost:5000

paths:
  /:
    get:
      summary: Check if the server is running
      responses:
        "200":
          description: Server is running
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: server is running
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: something went wrong

  /api/regions-locales:
    get:
      summary: Get available regions
      responses:
        "200":
          description: List of regions
          content:
            application/json:
              schema:
                type: object
                properties:
                  regions:
                    type: array
                    items:
                      type: string
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 400
                  message:
                    type: string
                    example: something went wrong

  /api/users:
    get:
      summary: Get a list of users
      parameters:
        - name: region
          in: query
          required: true
          schema:
            type: string
        - name: errors
          in: query
          schema:
            type: number
        - name: seed
          in: query
          schema:
            type: number
        - name: page
          in: query
          schema:
            type: number
      responses:
        "200":
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    index:
                      type: integer
                      example: 1
                    id:
                      type: integer
                      example: 123
                    name:
                      type: string
                      example: John Doe
                    address:
                      type: string
                      example: "123 Main St"
                    phone:
                      type: string
                      example: "+123456789"
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: something went wrong

  /api/users/generate-seed:
    get:
      summary: Generate a random seed
      responses:
        "200":
          description: Seed generated
          content:
            application/json:
              schema:
                type: object
                properties:
                  seed:
                    type: integer
                    example: 123456
        default:
          description: Error response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: something went wrong

components:
  responses:
    ErrorResponse:
      description: Error response
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              message:
                type: string
                example: something went wrong